---
substitutions:
  friendly_name: Spock2 

esphome:
  name: spock2
  friendly_name: ${friendly_name}
  platformio_options:
    board_build.flash_mode: dio
    upload_speed: 460800
  project:
    name: esphome.voice-assistant
    version: "1.0"
  min_version: 2023.11.1
  on_boot:
    - priority: -100.0 # everything is initialized, system is online - if condition waits for connection
      then:
        if:
          condition:
              - wifi.connected:
          then:
            - light.turn_off: # turns off light waiting on automation to start
                id: led_ring
                transition_length: 100ms
            - delay: 1s
            - voice_assistant.start_continuous:
            - delay: 1800s
            - switch.turn_on:
                id: restart_switch
    - priority: 300.0 # after sensor setup, before WIFI initialization 
      then:
        - light.turn_on: # indication that the controller has power
            id: led_ring
            brightness: 100%
            red: 100%
            green: 0%
            blue: 0%
            effect: Booting
    # - priority: 225.0 # after WIFI initialization
    #   then:
    #     - light.turn_on: # indication that the controller is looking for a wifi connection
    #         id: led_ring
    #         brightness: 50%
    #         red: 0%
    #         green: 0%
    #         blue: 100%
    #     - delay: '00:00:10'

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32S3_DATA_CACHE_64KB: "y"
      CONFIG_ESP32S3_DATA_CACHE_LINE_64B: "y"
      CONFIG_AUDIO_BOARD_CUSTOM: "y"
      CONFIG_ESP32_S3_KORVO1_BOARD: "y"
    components:
      - name: esp32_s3_korvo1_board
        source: github://abmantis/esphome_custom_audio_boards@main
        refresh: 0s

psram:
  mode: octal
  speed: 80MHz

external_components:
  # - source: github://abmantis/esphome@jesserockz-2023-284
    source: github://pr#5230
    components: esp_adf
    refresh: 0s

ota:
  password: !secret spock2-ota_password
logger:
  # level: INFO
api:
  encryption:
    key: !secret spock2-api_encryption_key
  on_client_connected:
    then:
      - if:
          condition:
            switch.is_on: use_wake_word
          then:
            - delay: 1s
            - voice_assistant.start_continuous:
            - delay: 1s
            - voice_assistant.stop:
            - delay: 2s
            - voice_assistant.start_continuous:
            - script.execute: reset_led
  # on_client_disconnected:
  #   then:
  #     - light.turn_on:
  #         id: led_ring
  #         blue: 0%
  #         red: 100%
  #         green: 100%
  #         brightness: 50%
  #         effect: connecting

dashboard_import:
  package_import_url: github://esphome/firmware/voice-assistant/esp32-s3-korvo1.yaml@main

captive_portal:
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "Spock2 Fallback Hotspot"
    password: !secret spock2-ap_password
  # on_connect:
  #   then:
  #     - delay: 5s # Gives time for improv results to be transmitted
  #     - ble.disable:
  # on_disconnect:
  #   then:
  #     - ble.enable:

# improv_serial:

# esp32_improv:
#   authorizer: none

button:
  - platform: factory_reset
    id: factory_reset_btn
    name: Factory reset

esp_adf:
  board: esp32s3korvo1

microphone:
  - platform: esp_adf
    id: korvo_mic

speaker:
  - platform: esp_adf
    id: korvo_speaker

voice_assistant:
  id: voice_asst
  microphone: korvo_mic
  speaker: korvo_speaker
  noise_suppression_level: 1
  auto_gain: 15dBFS
  volume_multiplier: 2
  use_wake_word: false
  on_listening:
    - light.turn_on:
        id: led_ring
        blue: 0%
        red: 0%
        green: 0%
        brightness: 80%
        effect: Listening
  on_tts_start:
    - light.turn_on:
        id: led_ring
        blue: 0%
        red: 0%
        green: 100%
        brightness: 50%
        effect: pulse
  on_end:
    - delay: 100ms
    - wait_until:
        not:
          speaker.is_playing:
    - script.execute: reset_led
  on_error:
    - if:
          condition:
            switch.is_off: stop_wake_word
          then:
          - light.turn_on:
              id: led_ring
              blue: 0%
              red: 100%
              green: 0%
              brightness: 50%
              effect: none
          - switch.turn_on: assist_error
          - delay: 1s
          - script.execute: reset_assist
          - script.wait: reset_assist
          - lambda: |-
              if (code == "wake-provider-missing" || code == "wake-engine-missing") {
                id(use_wake_word).turn_off();
              }

script:
  - id: reset_led
    then:
      - if:
          condition:
            switch.is_on: use_wake_word
          then:
            light.turn_off: led_ring
  - id: reset_assist
    then:
      - light.turn_on:
          id: led_ring
          blue: 0%
          red: 100%
          green: 0%
          brightness: 25%
          effect: Pulse
      - switch.turn_off: use_wake_word
switch:
  - platform: restart
    name: "${friendly_name} Restart"
    id: restart_switch

  - platform: gpio
    id: pa_ctrl
    pin: GPIO38
    name: "${friendly_name} Speaker Enable"
    restore_mode: RESTORE_DEFAULT_ON

  - platform: template
    name: Use wake word
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(voice_asst).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
      - script.execute: reset_led
      - switch.turn_off: assist_error
    on_turn_off:
      - voice_assistant.stop
      - script.execute: reset_led
  - platform: template
    name: Assist Error
    id: assist_error
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
    on_turn_on:
      - switch.turn_off: use_wake_word
      - if:
          condition:
            switch.is_off: stop_wake_word
          then:
          - delay: 10s
          - switch.turn_on: use_wake_word
  - platform: template
    name: Stop wake word
    id: stop_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
    on_turn_on:
      - lambda: id(voice_asst).set_use_wake_word(false);
      - voice_assistant.stop
      - switch.turn_off: assist_error
      - switch.turn_off: use_wake_word
      - script.execute: reset_led


light:
  - platform: esp32_rmt_led_strip
    id: led_ring
    name: "${friendly_name} Light"
    pin: GPIO19
    num_leds: 12
    rmt_channel: 0
    rgb_order: GRB
    chipset: ws2812
    default_transition_length: 0s
    effects:
      - pulse:
          name: "Pulse"
          transition_length: 0.5s
          update_interval: 0.5s
          max_brightness: 50%
      - addressable_twinkle:
          name: "Booting"
          twinkle_probability: 5%
          progress_interval: 4ms
      - addressable_color_wipe:
          name: "Wakeword"
          colors:
            - red: 0%
              green: 50%
              blue: 0%
              num_leds: 12
            - red: 50%
              green: 0%
              blue: 50%
              num_leds: 12
          add_led_interval: 20ms
          reverse: false
      - addressable_color_wipe:
          name: "Listening"
          colors:
            - red: 0%
              green: 0%
              blue: 60%
              num_leds: 3
              gradient: true
            - red: 60%
              green: 60%
              blue: 0%
              num_leds: 3
              gradient: true
            - red: 0%
              green: 60%
              blue: 0%
              num_leds: 3
              gradient: true
          add_led_interval: 100ms

binary_sensor:
  - platform: template
    name: "${friendly_name} Volume Up"
    id: btn_volume_up
  - platform: template
    name: "${friendly_name} Volume Down"
    id: btn_volume_down
  - platform: template
    name: "${friendly_name} Set"
    id: btn_set
    on_press:
      - switch.turn_on: stop_wake_word
  - platform: template
    name: "${friendly_name} Play"
    id: btn_play
    on_press:
      - switch.turn_on: use_wake_word
  - platform: template
    name: "${friendly_name} Mode"
    id: btn_mode
    on_click:
      - if:
            condition: voice_assistant.is_running
            then:
              - voice_assistant.stop:
            else:
              - voice_assistant.start_continuous:
    on_multi_click:
      - timing:
          - ON for at least 10s
        then:
          - button.press: factory_reset_btn
  - platform: template
    name: "${friendly_name} Record"
    id: btn_record
    on_press:
      - voice_assistant.start:
          silence_detection: false
      - light.turn_on:
          id: led_ring
          brightness: 100%
          effect: "Wakeword"
    on_release:
      - voice_assistant.stop:
      - light.turn_off:
          id: led_ring

sensor:
  - platform: uptime
    name: Uptime Sensor
  - id: button_adc
    platform: adc
    internal: true
    pin: 8
    attenuation: 11db
    update_interval: 15ms
    filters:
      - median:
          window_size: 5
          send_every: 5
          send_first_at: 1
      - delta: 0.1
    on_value_range:
      - below: 0.55
        then:
          - binary_sensor.template.publish:
              id: btn_volume_up
              state: ON
      - above: 0.65
        below: 0.92
        then:
          - binary_sensor.template.publish:
              id: btn_volume_down
              state: ON
      - above: 1.02
        below: 1.33
        then:
          - binary_sensor.template.publish:
              id: btn_set
              state: ON
      - above: 1.43
        below: 1.77
        then:
          - binary_sensor.template.publish:
              id: btn_play
              state: ON
      - above: 1.87
        below: 2.15
        then:
          - binary_sensor.template.publish:
              id: btn_mode
              state: ON
      - above: 2.25
        below: 2.56
        then:
          - binary_sensor.template.publish:
              id: btn_record
              state: ON
      - above: 2.8
        then:
          - binary_sensor.template.publish:
              id: btn_volume_up
              state: OFF
          - binary_sensor.template.publish:
              id: btn_volume_down
              state: OFF
          - binary_sensor.template.publish:
              id: btn_set
              state: OFF
          - binary_sensor.template.publish:
              id: btn_play
              state: OFF
          - binary_sensor.template.publish:
              id: btn_mode
              state: OFF
          - binary_sensor.template.publish:
              id: btn_record
              state: OFF