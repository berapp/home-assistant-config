substitutions:
  name: lexin
  friendly_name: "Lexin"

esphome:
  name: lexin
  friendly_name: Lexin
  platformio_options:
    board_build.flash_mode: dio
  on_boot:
    - priority: -100.0 # everything is initialized, system is online - if condition waits for connection
      then:
        if:
          condition:
              - wifi.connected:
          then:
            - light.turn_on: # indication of wifi connection confirmation
                id: led_ring
                brightness: 100%
                red: 0%
                green: 100%
                blue: 0%
            - delay: '00:00:05'
            - light.turn_off: # turns off light waiting on automation to start
                id: led_ring
            - delay: 1s
            - voice_assistant.start_continuous:
    - priority: 300.0 # after sensor setup, before WIFI initialization 
      then:
        - light.turn_on: # indication that the controller has power
            id: led_ring
            brightness: 100%
            red: 100%
            green: 0%
            blue: 0%
    - priority: 225.0 # after WIFI initialization
      then:
        - light.turn_on: # indication that the controller is looking for a wifi connection
            id: led_ring
            brightness: 100%
            red: 0%
            green: 0%
            blue: 100%
        - delay: '00:00:10'

esp32:
  board: esp-wrover-kit
  framework:
    type: esp-idf
    # type: arduino
    version: recommended

external_components:
  - source: github://rpatel3001/esphome@es8311
    components: [ es8311 ]
  - source: github://rpatel3001/esphome@es7210
    components: [ es7210 ]
  - source: github://pr#5230
    components:
      - esp_adf

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret lexin-api_encryption_key

ota:
  password: !secret lexin-ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Lexin Fallback Hotspot"
    password: !secret lexin-ap_password

i2c:
  sda: GPIO19 #GPIO1
  scl: GPIO32 #GPIO2
  scan: true
  frequency: 400kHz

es8311:
  address: 0x18

es7210:
  address: 0x40


# output:
#   - platform: gpio
#     id: pa_ctrl
#     pin: GPIO12 #GPIO38

i2s_audio:
  - id: codec
    i2s_lrclk_pin: GPIO22 #GPIO41 #ws
    i2s_bclk_pin: GPIO25 #GPIO40 #clk
    # i2s_mclk_pin: GPIO0 #GPIO20
  - id: mic_adc
    i2s_lrclk_pin: GPIO26 #GPIO9 #ws
    i2s_bclk_pin: GPIO27 #GPIO10 #clk
    i2s_mclk_pin: GPIO0 #GPIO20
    

speaker:
  - platform: i2s_audio
    id: external_speaker
    dac_type: external
    i2s_audio_id: codec
    i2s_dout_pin: GPIO13 #GPIO39
    mode: mono

microphone:
  - platform: i2s_audio
    id: external_mic
    adc_type: external
    i2s_audio_id: mic_adc
    i2s_din_pin: GPIO36 #GPIO11
    pdm: false

voice_assistant:
  id: voice_asst
  microphone: external_mic
  speaker: external_speaker
  noise_suppression_level: 1
  auto_gain: 15dBFS
  volume_multiplier: 2
  use_wake_word: false
  # on_intent_start:
  #   - light.turn_on:
  #       id: led_ring
  #       blue: 25%
  #       red: 100%
  #       green: 50%
  #       brightness: 100%
  # on_intent_end:
  #   - light.turn_on:
  #       id: led_ring
  #       blue: 100%
  #       red: 0%
  #       green: 100%
  #       brightness: 100%
  on_listening:
    - light.turn_on:
        id: led_ring
        blue: 100%
        red: 0%
        green: 0%
        brightness: 100%
        effect: wakeword
  on_tts_start:
    - light.turn_on:
        id: led_ring
        blue: 0%
        red: 0%
        green: 100%
        brightness: 50%
        effect: pulse
  on_end:
    - delay: 100ms
    - wait_until:
        not:
          speaker.is_playing:
    - script.execute: reset_led
  on_error:
    - if:
          condition:
            switch.is_off: stop_wake_word
          then:
          - light.turn_on:
              id: led_ring
              blue: 0%
              red: 100%
              green: 0%
              brightness: 100%
              effect: none
          - switch.turn_on: assist_error
          - delay: 1s
          - script.execute: reset_assist
          - script.wait: reset_assist
          - lambda: |-
              if (code == "wake-provider-missing" || code == "wake-engine-missing") {
                id(use_wake_word).turn_off();
              }

script:
  - id: reset_led
    then:
      - if:
          condition:
            switch.is_on: use_wake_word
          then:
            - light.turn_on:
                id: led_ring
                blue: 100%
                red: 0%
                green: 0%
                brightness: 30%
                effect: none
          else:
            - light.turn_off: led_ring
  - id: reset_assist
    then:
      - light.turn_on:
          id: led_ring
          blue: 0%
          red: 30%
          green: 0%
          brightness: 25%
          effect: none
      - switch.turn_off: use_wake_word
      



switch:
  - platform: restart
    name: "${friendly_name} Restart"
  - platform: gpio
    id: pa_ctrl
    pin: GPIO12
    name: "${friendly_name} Speaker Mute"
    restore_mode: RESTORE_DEFAULT_ON    
  - platform: template
    name: Use wake word
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(voice_asst).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
      - script.execute: reset_led
      - switch.turn_off: assist_error
    on_turn_off:
      - voice_assistant.stop
      - script.execute: reset_led
  - platform: template
    name: Assist Error
    id: assist_error
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
    on_turn_on:
      - switch.turn_off: use_wake_word
      - if:
          condition:
            switch.is_off: stop_wake_word
          then:
          - delay: 30s
          - switch.turn_on: use_wake_word
  - platform: template
    name: Stop wake word
    id: stop_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config
    on_turn_on:
      - lambda: id(voice_asst).set_use_wake_word(false);
      - voice_assistant.stop
      - switch.turn_off: assist_error
      - switch.turn_off: use_wake_word
      - script.execute: reset_led

light:
  - platform: esp32_rmt_led_strip
    id: led_ring
    name: "${friendly_name} Light"
    pin: GPIO33 #GPIO19
    num_leds: 12
    rmt_channel: 0
    rgb_order: GRB
    chipset: ws2812
    default_transition_length: 0s
    effects:
      - pulse:
          name: "Pulse"
          transition_length: 0.5s
          update_interval: 0.5s
      - addressable_twinkle:
          name: "Working"
          twinkle_probability: 5%
          progress_interval: 4ms
      - addressable_color_wipe:
          name: "Wakeword"
          colors:
            - red: 0%
              green: 50%
              blue: 0%
              num_leds: 12
          add_led_interval: 40ms
          reverse: false

binary_sensor:
  - platform: template
    name: "${friendly_name} Volume Up"
    id: btn_volume_up
  - platform: template
    name: "${friendly_name} Volume Down"
    id: btn_volume_down
  - platform: template
    name: "${friendly_name} Set"
    id: btn_set
    on_press:
      - switch.turn_on: stop_wake_word
  - platform: template
    name: "${friendly_name} Play"
    id: btn_play
    on_press:
      - switch.turn_on: use_wake_word
  - platform: template
    name: "${friendly_name} Mode"
    id: btn_mode
  - platform: template
    name: "${friendly_name} Record"
    id: btn_record
    on_press:
      # - output.turn_on: pa_ctrl
      - voice_assistant.start:
      - light.turn_on:
          id: led_ring
          brightness: 100%
          effect: "Wakeword"
    on_release:
      - voice_assistant.stop:
      # - output.turn_off: pa_ctrl
      - light.turn_off:
          id: led_ring

sensor:
  - id: button_adc
    platform: adc
    internal: true
    pin: 39 #8
    attenuation: 11db
    update_interval: 15ms
    filters:
      - median:
          window_size: 5
          send_every: 5
          send_first_at: 1
      - delta: 0.1
    on_value_range:
      - below: 0.55
        then:
          - binary_sensor.template.publish:
              id: btn_volume_up
              state: ON
      - above: 0.65
        below: 0.92
        then:
          - binary_sensor.template.publish:
              id: btn_volume_down
              state: ON
      - above: 1.02
        below: 1.33
        then:
          - binary_sensor.template.publish:
              id: btn_set
              state: ON
      - above: 1.43
        below: 1.77
        then:
          - binary_sensor.template.publish:
              id: btn_play
              state: ON
      - above: 1.87
        below: 2.15
        then:
          - binary_sensor.template.publish:
              id: btn_mode
              state: ON
      - above: 2.25
        below: 2.56
        then:
          - binary_sensor.template.publish:
              id: btn_record
              state: ON
      - above: 2.8
        then:
          - binary_sensor.template.publish:
              id: btn_volume_up
              state: OFF
          - binary_sensor.template.publish:
              id: btn_volume_down
              state: OFF
          - binary_sensor.template.publish:
              id: btn_set
              state: OFF
          - binary_sensor.template.publish:
              id: btn_play
              state: OFF
          - binary_sensor.template.publish:
              id: btn_mode
              state: OFF
          - binary_sensor.template.publish:
              id: btn_record
              state: OFF
